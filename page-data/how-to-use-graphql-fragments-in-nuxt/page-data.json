{"componentChunkName":"component---src-templates-post-tsx","path":"/how-to-use-graphql-fragments-in-nuxt/","result":{"data":{"markdownRemark":{"html":"<p>最近公司打 API 的方式換成用 GraphQL，這邊紀錄一下怎麼在 Nuxt.js 使用 GraphQL 的 <a href=\"https://graphql.org/learn/queries/#fragments\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">fragments</a> 特性，來達到重複使用程式碼查詢（query）的效果。</p>\n<h2 id=\"fragments-是什麼\" style=\"position:relative;\"><a href=\"#fragments-%E6%98%AF%E4%BB%80%E9%BA%BC\" aria-label=\"fragments 是什麼 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>fragments 是什麼</h2>\n<p>fragments 是什麼？簡單來說，就是一個可重用的欄位（fields）片段，你可以在裡頭放好幾個查詢欄位，接著就可以拿這個片段放到不同的查詢物件中。</p>\n<p>最簡單的範例長這樣：</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> posts <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">rightPosts</span><span class=\"token punctuation\">:</span> allPosts <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span><span class=\"token fragment function\">postFields</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token attr-name\">leftPosts</span><span class=\"token punctuation\">:</span> allPosts <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span><span class=\"token fragment function\">postFields</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">fragment</span> <span class=\"token fragment function\">postFields</span> <span class=\"token keyword\">on</span> <span class=\"token class-name\">Post</span> <span class=\"token punctuation\">{</span>\n  id\n  title\n  heroImage <span class=\"token punctuation\">{</span>\n    title\n    urlMobileSized\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>以 JavaScript 來類比，你可以想像 <code class=\"language-text\">postFields</code> 就是物件，而 <code class=\"language-text\">...postFields</code> 就像是把<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">物件展開（spread）</a>，能將 <code class=\"language-text\">postFields</code> 內聯到 <code class=\"language-text\">rightPosts</code> 物件中，所以最後 <code class=\"language-text\">rightPosts</code> 實際上是長這樣：</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> posts <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">rightPosts</span><span class=\"token punctuation\">:</span> allPosts <span class=\"token punctuation\">{</span>\n    id\n    title\n    heroImage <span class=\"token punctuation\">{</span>\n      title\n      urlMobileSized\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"情境說明\" style=\"position:relative;\"><a href=\"#%E6%83%85%E5%A2%83%E8%AA%AA%E6%98%8E\" aria-label=\"情境說明 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>情境說明</h2>\n<p>這是我碰上的狀況：我需要在網站的不同頁面去取得最新文章，它們的查詢欄位大致相同，但仍有些欄位不是每個查詢都需要的。</p>\n<p>最簡單的做法當然就是每個查詢都寫自己的欄位。這個方法很快，但缺點就是重複，之後修改共同欄位需要一次改好幾個地方。</p>\n<p>另一個方法是使用指令（<a href=\"https://graphql.org/learn/queries/#directives\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">directives</a>），藉由變數（<a href=\"https://graphql.org/learn/queries/#variables\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">variables</a>）來動態地更改欄位，比如這樣：</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> posts<span class=\"token punctuation\">(</span><span class=\"token variable\">$shouldQueryTitle</span><span class=\"token punctuation\">:</span> Boolean<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  allPosts<span class=\"token punctuation\">(</span><span class=\"token attr-name\">first</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    id\n    title <span class=\"token directive function\">@include</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">if</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$shouldQueryTitle</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>若 <code class=\"language-text\">shouldHasTitle</code> 為 <code class=\"language-text\">true</code>，就會查詢 <code class=\"language-text\">title</code> 這個欄位，反之則不會。這個方法可行，但如果需要客製化的欄位不少，使用起來會相當麻煩。</p>\n<p>fragments 能怎麼解決這個問題？很簡單，看共用欄位有哪些，把它們抽取成 fragment，再用 <code class=\"language-text\">...</code> 內聯。</p>\n<p>這個方法還有一個好處，就是它能<strong>內聯嵌套查詢</strong>，而非在第一層就整個覆蓋。比方說，下面這塊程式碼，<code class=\"language-text\">allPosts</code> 有兩個 <code class=\"language-text\">heroImage</code> 欄位，但裡頭查詢的欄位不同：</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> posts <span class=\"token punctuation\">{</span>\n  allPosts <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span><span class=\"token fragment function\">postFields</span>\n    heroImage <span class=\"token punctuation\">{</span> <span class=\"token comment\"># the first heroImage</span>\n      urlTabletSized\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">fragment</span> <span class=\"token fragment function\">postFields</span> <span class=\"token keyword\">on</span> <span class=\"token class-name\">Post</span> <span class=\"token punctuation\">{</span>\n  id\n  title\n  heroImage <span class=\"token punctuation\">{</span> <span class=\"token comment\"># the second heroImage</span>\n    title\n    urlMobileSized\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>最後，<code class=\"language-text\">heroImage</code> 實際上是長這樣：</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\">heroImage <span class=\"token punctuation\">{</span>\n  title\n  urlMobileSized\n  urlTabletSized\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>這可以讓我們在享受共用欄位的同時，還能客製化出不同的查詢內容。很方便吧！</p>\n<h2 id=\"在多個檔案間共用-fragments\" style=\"position:relative;\"><a href=\"#%E5%9C%A8%E5%A4%9A%E5%80%8B%E6%AA%94%E6%A1%88%E9%96%93%E5%85%B1%E7%94%A8-fragments\" aria-label=\"在多個檔案間共用 fragments permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>在多個檔案間共用 fragments</h2>\n<p>如果你是在 Nuxt 中使用 GraphQL，可以參考 <a href=\"https://github.com/nuxt-community/apollo-module\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">@nuxtjs/apollo</a> 這個套件，它裡頭包著 <a href=\"https://github.com/vuejs/vue-apollo\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">vue-apollo</a>。</p>\n<p>要創建一個查詢，可以<a href=\"https://apollo.vuejs.org/guide/apollo/queries.html#simple-query\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">利用 <code class=\"language-text\">gql</code> 標籤直接寫在 <code class=\"language-text\">apollo</code> 物件裡</a>，也可以<a href=\"https://github.com/apollographql/graphql-tag#importing-graphql-files\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">另開一個 <code class=\"language-text\">.graphql</code> 或 <code class=\"language-text\">.gql</code> 檔</a>。我偏好後者，比較好管理。</p>\n<p>回到 fragments。若是用檔案管理的方法，fragments 一般來說會放在使用它的檔案中。但如果我要在多個檔案間共用一個 fragment，那該怎麼做？</p>\n<p>情境是這樣：我有好幾個不同的查詢物件，它們都會去查詢 <code class=\"language-text\">heroImage</code> 和 <code class=\"language-text\">ogImage</code>，而這兩個欄位也都是物件，會去查詢 tiny、mobile、tablet、desktop、original 這五種尺寸的圖片。每次查詢都要寫這 5 * 2 個欄位，實在有點麻煩，有沒有辦法把它們抽取成一個 fragment 呢？</p>\n<p>在單一檔案中很簡單，就放在裡面：</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> latestPosts <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">latestPosts</span><span class=\"token punctuation\">:</span> allPosts <span class=\"token punctuation\">{</span>\n    id\n    title\n    heroImage <span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">...</span><span class=\"token fragment function\">urls</span>\n    <span class=\"token punctuation\">}</span>\n    ogImage <span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">...</span><span class=\"token fragment function\">urls</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">fragment</span> <span class=\"token fragment function\">urls</span> <span class=\"token keyword\">on</span> <span class=\"token class-name\">Image</span> <span class=\"token punctuation\">{</span>\n  urlTinySized\n  urlMobileSized\n  urlTabletSized\n  urlDesktopSized\n  urlOriginal\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>但若要在多個檔案間共用，可以把這個 fragment 移到一個獨立的檔案。假設檔案結構長這樣：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">apollo\n├─fragments\n   └─image-urls.gql &lt;-- `urls` fragment is here!\n└─queries\n   ├─editor-choices.gql\n   ├─collaborations.gql\n   └─posts.gql</code></pre></div>\n<p>要怎麼把 <code class=\"language-text\">image-urls.gql</code> 導入到查詢檔案中使用呢？你可能會想說直接 <code class=\"language-text\">import</code>，但電腦會噴錯跟你說行不通，因為 <code class=\"language-text\">import</code> 是 JS 語法，GraphQL 無法辨識。</p>\n<p>這個問題卡了我一陣子，直到在 Google 搜尋上看到有人說可以這樣做：</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token comment\">#import '../fragments/image-urls.gql'</span>\n\n<span class=\"token keyword\">query</span> latestPosts <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">latestPosts</span><span class=\"token punctuation\">:</span> allPosts <span class=\"token punctuation\">{</span>\n    id\n    title\n    heroImage <span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">...</span><span class=\"token fragment function\">urls</span>\n    <span class=\"token punctuation\">}</span>\n    ogImage <span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">...</span><span class=\"token fragment function\">urls</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>只要在 <code class=\"language-text\">import</code> 前加上 <code class=\"language-text\">#</code> 變成註解，就能成功把 fragments 導進來囉（我猜這應該是 <a href=\"https://github.com/creditkarma/graphql-loader\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">graphql-loader</a> 的功勞，但詳細怎麼做的就不清楚了）。</p>","tableOfContents":"<ul>\n<li><a href=\"/how-to-use-graphql-fragments-in-nuxt/#fragments-%E6%98%AF%E4%BB%80%E9%BA%BC\">fragments 是什麼</a></li>\n<li><a href=\"/how-to-use-graphql-fragments-in-nuxt/#%E6%83%85%E5%A2%83%E8%AA%AA%E6%98%8E\">情境說明</a></li>\n<li><a href=\"/how-to-use-graphql-fragments-in-nuxt/#%E5%9C%A8%E5%A4%9A%E5%80%8B%E6%AA%94%E6%A1%88%E9%96%93%E5%85%B1%E7%94%A8-fragments\">在多個檔案間共用 fragments</a></li>\n</ul>","fields":{"slug":"/how-to-use-graphql-fragments-in-nuxt/"},"frontmatter":{"title":"在 Nuxt.js 共用 GraphQL fragments","description":"GraphQL fragments 是什麼？怎麼在 Nuxt.js 不同檔案間共用？","featuredImage":null,"date":"2020-10-01","tags":["nuxt","graphql","fragments"],"update":"2020-10-01"}}},"pageContext":{"slug":"/how-to-use-graphql-fragments-in-nuxt/","series":[],"lastmod":"2020-10-01"}},"staticQueryHashes":["2326376460"]}