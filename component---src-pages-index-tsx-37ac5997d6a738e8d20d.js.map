{"version":3,"sources":["webpack:///./src/components/Bio/index.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/components/PostList/index.tsx"],"names":["Bio","comment","config","name","company","location","email","website","linkedin","facebook","instagram","github","className","icon","faUserCircle","faAddressCard","faMapMarkerAlt","faAt","href","faLink","target","rel","siteUrl","faRss","faLinkedin","faFacebook","faInstagram","faGithub","pageQuery","IndexPage","props","posts","data","allMarkdownRemark","edges","Layout","PostList","length","to","faSearch","hasUpdate","update","includes","useState","showCnt","setShowCnt","currentPostList","setCurrentPostList","sortedPosts","useMemo","sort","a","b","af","node","frontmatter","bf","aDate","Date","date","bDate","throttleScrollHandler","useCallback","throttle","window","outerHeight","document","querySelector","getBoundingClientRect","bottom","prev","expendPostList","list","mapToList","map","post","fields","slug","title","description","tags","mapTag","tag","key","useEffect","slice","addEventListener","removeEventListener"],"mappings":"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","file":"component---src-pages-index-tsx-37ac5997d6a738e8d20d.js","sourcesContent":["import * as React from 'react';\nimport { FontAwesomeIcon as Fa } from '@fortawesome/react-fontawesome';\nimport {\n  faUserCircle,\n  faAt,\n  faMapMarkerAlt,\n  faLink,\n  faAddressCard,\n  faRss,\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  faFacebook,\n  faInstagram,\n  faLinkedin,\n  faGithub,\n} from '@fortawesome/free-brands-svg-icons';\n\nimport './bio.scss';\nimport config from '../../../config';\n\nconst Bio = () => {\n  const {\n    comment,\n    name,\n    company,\n    location,\n    email,\n    website,\n    linkedin,\n    facebook,\n    instagram,\n    github,\n  } = config;\n\n  return (\n    <div className=\"bio\">\n      {!comment ? null : <span className=\"comment\">{comment}</span>}\n\n      {!name ? null : (\n        <div className=\"bio-item name\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faUserCircle} />\n          </div>\n          <span>{name}</span>\n        </div>\n      )}\n\n      {!company ? null : (\n        <div className=\"bio-item company\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faAddressCard} />\n          </div>\n          <span>{company}</span>\n        </div>\n      )}\n\n      {!location ? null : (\n        <div className=\"bio-item location\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faMapMarkerAlt} />\n          </div>\n          <span>{location}</span>\n        </div>\n      )}\n\n      {!email ? null : (\n        <div className=\"bio-item email\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faAt} />\n          </div>\n          <a href={`mailto:${email}`}>{email}</a>\n        </div>\n      )}\n\n      {!website ? null : (\n        <div className=\"bio-item website\">\n          <div className=\"icon-wrap\">\n            <Fa icon={faLink} />\n          </div>\n\n          <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n            {website}\n          </a>\n        </div>\n      )}\n\n      <div className=\"social\">\n        <a\n          href={`${config.siteUrl}/rss`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Fa icon={faRss} className=\"rss\" />\n        </a>\n\n        {!linkedin ? null : (\n          <a href={linkedin} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faLinkedin} className=\"linkedin\" />\n          </a>\n        )}\n\n        {!facebook ? null : (\n          <a href={facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faFacebook} className=\"facebook\" />\n          </a>\n        )}\n        {!instagram ? null : (\n          <a href={instagram} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faInstagram} className=\"instagram\" />\n          </a>\n        )}\n        {!github ? null : (\n          <a href={github} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Fa icon={faGithub} className=\"github\" />\n          </a>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Bio;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport * as React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport { FontAwesomeIcon as Fa } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/seo';\nimport Bio from '../components/Bio';\nimport './styles/index.scss';\nimport PostList from '../components/PostList';\n\ninterface IndexPageProps {\n  path: string;\n  data: any;\n}\n\nconst IndexPage = (props: IndexPageProps) => {\n  const { data } = props;\n  const posts = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout>\n      <SEO />\n      <div className=\"index-wrap\">\n        <Bio />\n        <div className=\"index-post-list-wrap\">\n          <PostList posts={posts} />\n          {posts.length < 100 ? null : (\n            <div className=\"show-more-posts\">\n              <div className=\"show-more-btn\">\n                <Link to=\"/search\">\n                  <Fa icon={faSearch} />\n                  <span>SHOW MORE POSTS</span>\n                </Link>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 100\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            description\n            update(formatString: \"YYYY-MM-DD\")\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport * as React from 'react';\nimport { useEffect, useState, useCallback, useMemo } from 'react';\nimport { Link } from 'gatsby';\nimport throttle from 'lodash/throttle';\n\nimport './postList.scss';\n\ninterface PostListProps {\n  posts: any[];\n}\n\nconst PostList = (props: PostListProps) => {\n  const { posts } = props;\n  const [showCnt, setShowCnt] = useState(10);\n  const [currentPostList, setCurrentPostList] = useState<JSX.Element[]>([]);\n  const sortedPosts = useMemo(() => {\n    posts.sort((a: any, b: any) => {\n      const af = a.node.frontmatter;\n      const bf = b.node.frontmatter;\n\n      const aDate = new Date(hasUpdate(af.update) ? af.update : af.date);\n      const bDate = new Date(hasUpdate(bf.update) ? bf.update : bf.date);\n\n      if (aDate < bDate) return 1;\n      if (aDate > bDate) return -1;\n      return 0;\n    });\n    return posts;\n  }, [posts]);\n\n  const throttleScrollHandler = useCallback(\n    throttle(() => {\n      if (\n        window.outerHeight >\n        (document.querySelector(\n          '.post-list'\n        ) as HTMLDivElement).getBoundingClientRect().bottom\n      ) {\n        setShowCnt((prev: number) => {\n          if (prev >= sortedPosts.length) return prev;\n          return prev + 10;\n        });\n      }\n    }, 250),\n    [sortedPosts]\n  );\n\n  const expendPostList = useCallback((list: any) => {\n    const mapToList = list.map((post: any) => {\n      const { node } = post;\n      const { fields, frontmatter } = node;\n      const { slug } = fields;\n      const { date, title, description, tags } = frontmatter;\n      let { update } = frontmatter\n\n      if (!hasUpdate(update)) {\n        update = null;\n      }\n\n      const mapTag = tags.map((tag: string) => {\n        if (tag === 'undefined') return;\n\n        return (\n          <div key={`${slug}-${tag}`} className=\"tag\">\n            <span>\n              <Link to={`/tags#${tag}`}>{`#${tag}`}</Link>\n            </span>\n          </div>\n        );\n      });\n\n      return (\n        <li key={slug} className={`post`}>\n          <article>\n            <h1>\n              <Link to={slug}>{title}</Link>\n            </h1>\n            <div className=\"info\">\n              <div className=\"date-wrap\">\n                <span className=\"date\">{date}</span>\n                {update ? (\n                  <span className=\"update\">&nbsp;{`(Updated: ${update})`}</span>\n                ) : null}\n              </div>\n              {tags.length && tags[0] !== 'undefined' ? (\n                <span className=\"info-dot\">·</span>\n              ) : null}\n              <ul className=\"tag-list\">{mapTag}</ul>\n            </div>\n            <Link to={slug} className=\"excerpt\">\n              <p>{description}</p>\n            </Link>\n          </article>\n        </li>\n      );\n    });\n\n    setCurrentPostList((prev: JSX.Element[]) => {\n      return [...prev, ...mapToList];\n    });\n  }, []);\n\n  useEffect(() => {\n    if (showCnt > 0 && showCnt !== 10)\n      expendPostList(sortedPosts.slice(currentPostList.length, showCnt));\n  }, [showCnt]);\n\n  useEffect(() => {\n    if (currentPostList.length) setCurrentPostList([]);\n\n    setShowCnt((prev: number) => {\n      if (prev === 10) expendPostList(sortedPosts.slice(0, 10));\n      return 10;\n    });\n\n    window.addEventListener('scroll', throttleScrollHandler);\n\n    return () => {\n      window.removeEventListener('scroll', throttleScrollHandler);\n    };\n  }, [sortedPosts]);\n\n  return (\n    <div className=\"post-list\">\n      <ul>{currentPostList}</ul>\n    </div>\n  );\n};\n\nfunction hasUpdate(update: string) {\n  return !update.includes('0001');\n}\n\nexport default PostList;\n"],"sourceRoot":""}